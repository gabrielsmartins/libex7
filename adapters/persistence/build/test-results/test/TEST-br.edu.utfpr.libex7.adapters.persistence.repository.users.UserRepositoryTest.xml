<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="br.edu.utfpr.libex7.adapters.persistence.repository.users.UserRepositoryTest" tests="4" skipped="0" failures="0" errors="0" timestamp="2020-05-05T02:08:05" hostname="DESKTOP-LUUQ2JI" time="0.053">
  <properties/>
  <testcase name="givenNewUserWhenSaveThenReturnSavedUser()" classname="br.edu.utfpr.libex7.adapters.persistence.repository.users.UserRepositoryTest" time="0.019"/>
  <testcase name="givenExistingUserWhenRemoveThenDoNothing()" classname="br.edu.utfpr.libex7.adapters.persistence.repository.users.UserRepositoryTest" time="0.012"/>
  <testcase name="givenExistingUsersWhenFindAllThenReturnUserList()" classname="br.edu.utfpr.libex7.adapters.persistence.repository.users.UserRepositoryTest" time="0.015"/>
  <testcase name="givenExistingUserWhenFindByIdThenReturnUser()" classname="br.edu.utfpr.libex7.adapters.persistence.repository.users.UserRepositoryTest" time="0.005"/>
  <system-out><![CDATA[Hibernate: insert into USUARIO (CODIGO_USUARIO, DATA_NASCIMENTO_USUARIO, NOME_USUARIO) values (null, ?, ?)
Hibernate: insert into SERVIDOR (MATRICULA_SERVIDOR, CODIGO_USUARIO) values (?, ?)
Hibernate: insert into TELEFONE_USUARIO (NUMERO_TELEFONE, CODIGO_USUARIO) values (?, ?)
Hibernate: insert into USUARIO (CODIGO_USUARIO, DATA_NASCIMENTO_USUARIO, NOME_USUARIO) values (null, ?, ?)
Hibernate: insert into SERVIDOR (MATRICULA_SERVIDOR, CODIGO_USUARIO) values (?, ?)
Hibernate: insert into TELEFONE_USUARIO (NUMERO_TELEFONE, CODIGO_USUARIO) values (?, ?)
Hibernate: insert into USUARIO (CODIGO_USUARIO, DATA_NASCIMENTO_USUARIO, NOME_USUARIO) values (null, ?, ?)
Hibernate: insert into SERVIDOR (MATRICULA_SERVIDOR, CODIGO_USUARIO) values (?, ?)
Hibernate: insert into TELEFONE_USUARIO (NUMERO_TELEFONE, CODIGO_USUARIO) values (?, ?)
Hibernate: select userentity0_.CODIGO_USUARIO as codigo_u1_11_, userentity0_.DATA_NASCIMENTO_USUARIO as data_nas2_11_, userentity0_.NOME_USUARIO as nome_usu3_11_, userentity0_1_.MATRICULA_SERVIDOR as matricul1_8_, userentity0_2_.REGISTRO_ALUNO as registro1_0_, case when userentity0_1_.CODIGO_USUARIO is not null then 1 when userentity0_2_.CODIGO_USUARIO is not null then 2 when userentity0_.CODIGO_USUARIO is not null then 0 end as clazz_ from USUARIO userentity0_ left outer join SERVIDOR userentity0_1_ on userentity0_.CODIGO_USUARIO=userentity0_1_.CODIGO_USUARIO left outer join ALUNO userentity0_2_ on userentity0_.CODIGO_USUARIO=userentity0_2_.CODIGO_USUARIO
Hibernate: insert into USUARIO (CODIGO_USUARIO, DATA_NASCIMENTO_USUARIO, NOME_USUARIO) values (null, ?, ?)
Hibernate: insert into SERVIDOR (MATRICULA_SERVIDOR, CODIGO_USUARIO) values (?, ?)
Hibernate: insert into TELEFONE_USUARIO (NUMERO_TELEFONE, CODIGO_USUARIO) values (?, ?)
]]></system-out>
  <system-err><![CDATA[mai 04, 2020 11:08:05 PM org.hibernate.jpa.internal.util.LogHelper logPersistenceUnitInformation
INFO: HHH000204: Processing PersistenceUnitInfo [name: libex7]
mai 04, 2020 11:08:05 PM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
WARN: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
mai 04, 2020 11:08:05 PM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl buildCreator
INFO: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:mem:libex7db;MODE=MYSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;INIT=runscript from 'classpath:create_schema_libex7.sql']
mai 04, 2020 11:08:05 PM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl buildCreator
INFO: HHH10001001: Connection properties: {password=****, user=sa}
mai 04, 2020 11:08:05 PM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl buildCreator
INFO: HHH10001003: Autocommit mode: false
mai 04, 2020 11:08:05 PM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections <init>
INFO: HHH000115: Hibernate connection pool size: 20 (min=1)
mai 04, 2020 11:08:05 PM org.hibernate.dialect.Dialect <init>
INFO: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
mai 04, 2020 11:08:05 PM org.hibernate.mapping.RootClass checkCompositeIdentifier
WARN: HHH000038: Composite-id class does not override equals(): br.edu.utfpr.libex7.adapters.persistence.entity.checkouts.CheckOutEntity$CheckOutEntityId
mai 04, 2020 11:08:05 PM org.hibernate.mapping.RootClass checkCompositeIdentifier
WARN: HHH000039: Composite-id class does not override hashCode(): br.edu.utfpr.libex7.adapters.persistence.entity.checkouts.CheckOutEntity$CheckOutEntityId
mai 04, 2020 11:08:05 PM org.hibernate.mapping.RootClass checkCompositeIdentifier
WARN: HHH000038: Composite-id class does not override equals(): br.edu.utfpr.libex7.adapters.persistence.entity.users.UserEntity$PhoneEntity$PhoneEntityId
mai 04, 2020 11:08:05 PM org.hibernate.mapping.RootClass checkCompositeIdentifier
WARN: HHH000039: Composite-id class does not override hashCode(): br.edu.utfpr.libex7.adapters.persistence.entity.users.UserEntity$PhoneEntity$PhoneEntityId
mai 04, 2020 11:08:05 PM org.hibernate.tuple.PojoInstantiator <init>
INFO: HHH000182: No default (no-argument) constructor for class: br.edu.utfpr.libex7.adapters.persistence.entity.checkouts.CheckOutEntity$CheckInEntity (class must be instantiated by Interceptor)
mai 04, 2020 11:08:05 PM org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator initiateService
INFO: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
]]></system-err>
</testsuite>
