plugins {
    id 'java'
    id 'application'
}

group 'br.edu.utfpr.libex7'
version '1.0-SNAPSHOT'

mainClassName = 'br.edu.utfpr.adapters.gui.Libex7Application'

allprojects {
    apply plugin : 'java'
    apply plugin : 'jacoco'
    version '1.0.0-SNAPSHOT'
    
    sourceCompatibility=1.8
	targetCompatibility=1.8
	[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
	
	repositories {
       mavenCentral()
       jcenter()
    }
	

    jacoco {
        toolVersion = '0.8.5'
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok:1.18.12'
        annotationProcessor 'org.projectlombok:lombok:1.18.12'
        
        implementation 'org.apache.commons:commons-lang3:3.9'

        testCompileOnly 'org.projectlombok:lombok:1.18.12'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
        testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
        testImplementation 'org.junit.platform:junit-platform-launcher:1.6.2'
        

        testCompile group: 'org.mockito', name: 'mockito-core', version: '3.3.3'
        testCompile group: 'org.assertj', name: 'assertj-core', version: '3.15.0'  
    }
    
}

subprojects {

    repositories {
        mavenCentral()
    }

    test{
        useJUnitPlatform()
        finalizedBy(jacocoTestReport)
    }

    jacocoTestReport {
        reports {
            html.enabled = true
            xml.enabled = true
            csv.enabled = false
            html.destination file("${buildDir}/jacocoHtml")
        }
    }
    
}

configurations {
    childJars
}


dependencies {
    subprojects.each {
        childJars project(it.path)
    }
}

jar {
    dependsOn configurations.childJars
    
    manifest{
        attributes('Class-Path': configurations.compile.collect{it.name()}.join(' '),
                   'Main-Class': mainClassName,
                   'Implementation-Title' : project.name,
                   'Implementation-Version' : project.version)
    }
    
    from { configurations.childJars.collect { zipTree(it) } }
}




